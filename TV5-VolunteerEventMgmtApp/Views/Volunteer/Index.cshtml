@model IEnumerable<TV5_VolunteerEventMgmtApp.Models.Volunteer>

@{
    ViewData["Title"] = "Index";
}

<h1>Manage Volunteers</h1>


<div>
    <p class="d-inline"><a class="btn btn-purple" asp-action="Create">Create New</a></p>
    <button class="btn btn-purple">Bulk Create</button>
    <button class="btn btn-purple">Confirmations</button>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmailAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JoinDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimesLate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.numShifts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsConfirmed)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.JoinDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimesLate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.numShifts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsConfirmed)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var m = Model.ElementAt(0);
}

<h3>CARD MOCKUP</h3>
<div>
    <span> @m.FirstName @m.LastName </span>
</div>



<h3>Confirmtion MOCKUP</h3>
<div id="pending-confirmations">
    <div class="d-flex gap-3 card-shadow rounded w-fit p-2 align-items-center" id="confirmation-@m.Id">
        <span>@m.FirstName @m.LastName</span>
        <span>@m.PhoneNumber</span>
        <span>@m.EmailAddress</span>
        <div>
            <button class="v-btn-confirm" data-volunteerId="@m.Id">Confirm</button>
            <button class="v-btn-deny" data-id="@m.Id">Deny</button>
        </div>
    </div>
</div>

<!--
    Todd clicks confirm, we hit the confirmation endpoint
    if it returns a success we remove the element from the confirmation list & set them confirmed in the db
    (Later we will update the current card list & shoot the person an email if they're confirmed)



-->


<script src="js/volunteers.js" type="module">

</script>
