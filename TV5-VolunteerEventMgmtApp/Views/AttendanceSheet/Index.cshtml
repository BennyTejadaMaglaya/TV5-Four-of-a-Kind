@model IEnumerable<TV5_VolunteerEventMgmtApp.Models.AttendanceSheet>

@{
	ViewData["Title"] = "Index";
}

<h1>Attendance Sheets</h1>
<hr />

<form asp-action="Index" method="get">

	<input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
	<input type="hidden" name="sortField" value="@ViewData["sortField"]" />
	<input type="hidden" name="currentTab" value="@ViewData["currentTab"]" />

	<div class="form-horizontal">

		<div class="mb-2">
			<!-- CREATE BTN -->
			<a asp-action="Create" class="btn btn-purple py-1">Create New</a>
			<!-- FILTER BTN -->
			<button class="btn @ViewData["BtnBg"] py-1" type="button" data-bs-toggle="collapse" id="filterToggle"
					data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
				@ViewData["BtnText"]
			</button>
		</div>

		<!-- FILTER BOX -->
		<div class="filter-box collapse mb-2 @ViewData["ShowFilter"]" id="collapseFilter">
			<div class="px-2 pb-0">

				<div class="row">
					<div class="form-group col-md-4">
						<label class="control-label">Filter by Location</label>
						@Html.DropDownList("LocationId", null, "All", htmlAttributes: new { @class = "form-control p-1" })
					</div>

					<div class="form-group col-md-4 align-self-end">
						<input type="submit" id="btnApply" name="actionButton" value="Apply" class="btn btn-outline-purple py-1" />
						<a asp-action="Index" id="btnClear" class="btn btn-outline-dark py-1">Clear</a>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- TABS -->
	<ul class="nav nav-tabs mb-3" id="attendanceSheetTabs" role="tablist">
		<li class="nav-item">
			<a class="nav-link @((string)ViewData["currentTab"] == "list" ? "active" : "") fw-bold text-purple"
			   id="list-tab"
			   data-toggle="tab"
			   href="#list"
			   role="tab"
			   aria-controls="list"
			   aria-selected="true"
			   onclick="setTab('list')">&#x2630;</a>
		</li>
		<li class="nav-item">
			<a class="nav-link @((string)ViewData["currentTab"] == "cards" ? "active" : "") fw-bold text-purple"
			   id="cards-tab"
			   data-toggle="tab"
			   href="#cards"
			   role="tab"
			   aria-controls="cards"
			   aria-selected="false"
			   onclick="setTab('cards')">&#x25AD;</a>
		</li>
	</ul>

	<div class="tab-content" id="attendanceSheetTabsContent">

		<!-- LIST -->
		<div class="tab-pane fade @((string)ViewData["currentTab"] == "list" ? "show active" : "")"
			 id="list" role="tabpanel" aria-labelledby="list-tab">
			<table class="table table-hover">
				<thead>
					<tr>
						<th>
							<button type="submit" name="actionButton" value="Location"
									class="btn btn-toolbar p-0 fw-bold d-inline">
								Location <span class="text-purple">&#11137</span>
							</button>
						</th>
						<th class="d-none d-md-table-cell">
							@Html.DisplayNameFor(model => model.Director)
						</th>
						<th>
							<button type="submit" name="actionButton" value="Date"
									class="btn btn-toolbar p-0 fw-bold d-inline">
								Date <span class="text-purple">&#11137</span>
							</button>
						</th>
						<th>
							@Html.DisplayNameFor(model => model.StartTime)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Attendees)
						</th>
						<th class="d-none d-lg-table-cell">
							@Html.DisplayNameFor(model => model.Notes)
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model)
					{
						<tr>
							<td class="fw-bold text-purple">
								@Html.DisplayFor(modelItem => item.Location.City)
							</td>

							<td class="d-none d-md-table-cell">
								@Html.DisplayFor(modelItem => item.Director.FullName)
							</td>
							<td>
								@{
									var date = item.StartTime.ToString("MMM dd, yyyy");
								}
								@date
							</td>
							<td>
								@{
									var startTime = item.StartTime.ToString("hh:mm tt");
								}
								@startTime
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Attendees.Count)
							</td>
							<td class="d-none d-lg-table-cell col-3">
								@{
									var notes = item.Notes;
									var truncatedNotes = notes.Length > 20 ? notes.Substring(0, 20) + "..." : notes;
								}
								@truncatedNotes
							</td>
							<td>
								<a asp-action="Edit" asp-route-id="@item.Id" class="text-purple text-decoration-none">Edit</a> |
								<a asp-action="Details" asp-route-id="@item.Id" class="text-purple text-decoration-none">Details</a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>

		<!-- CARDS -->
		<div class="tab-pane fade @((string)ViewData["currentTab"] == "cards" ? "show active" : "")"
			 id="cards" role="tabpanel" aria-labelledby="cards-tab">

			<div class="fw-bold mb-3">
				<span class="me-2">Sort by</span>
				<button type="submit" name="actionButton" value="Location"
						class="btn btn-outline-purple py-0 d-inline">
					Location
				</button>
				<button type="submit" name="actionButton" value="Date"
						class="btn btn-outline-purple py-0 d-inline">
					Date
				</button>
			</div>

			<div class="attendance-cards-grid mb-3">
				@foreach (var item in Model)
				{
					<div class="attendance-card"
						 onclick="location.href='@Url.Action("Details", new { id = item.Id })'">

						<div class="card-inner-grid">

							<div class="fw-bold text-purple">
								@Html.DisplayFor(modelItem => item.Location.City)
							</div>
							<div class="">
								@{
									var startDate = item.StartTime.ToString("ddd, MMMM dd, yyyy");
									var startTime = item.StartTime.ToString("hh:mm tt");
									var endTime = item.EndTime.ToString("hh:mm tt");
								}
								<div class="fw-bold">@startDate</div>
								<div>@startTime - @endTime</div>
							</div>
						</div>

						<div class="card-inner-grid">
							<div class="sub-inner-grid">
								<div class="fw-bold">Attendance</div>
								<div class="fw-bold text-purple">@item.Attendees.Count</div>
							</div>

							<div class="text-truncate d-none d-lg-block">
								<div class="fw-bold text-gray">Notes</div>
								@Html.DisplayFor(modelItem => item.Notes)
							</div>
						</div>

						<div class="d-flex flex-column gap-1 justify-content-end align-content-end ms-3">
							<a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-purple py-0">Edit</a>
						</div>
					</div>
				}
			</div>
		</div>

	</div> <!-- tab-content end -->

	<partial name="_PagingNavBar" />
</form>

@section Scripts {
	<script>
		$(document).ready(function () {
			// For tabs switching
			$('#attendanceSheetTabs a').on('click', function (e) {
				e.preventDefault();
				$(this).tab('show');
				sessionStorage.setItem('currentTab', $(this).attr('href').substring(1));
			});
		});
	</script>

	<script>
		// To remember the selected tab
		function setTab(tab) {
			document.querySelector('input[name="currentTab"]').value = tab;

			const urlParams = new URLSearchParams(window.location.search);
			urlParams.set('currentTab', tab);
			window.location.search = urlParams;
		}
	</script>

	<script type="text/javascript">
		// For paging tooltips and showing modal
		var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
		var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
			return new bootstrap.Tooltip(tooltipTriggerEl);
		});
		function showModal(modalId) {
			var modal = new bootstrap.Modal(document.querySelector(modalId));
			modal.show();
		}
	</script>
}
