@model TV5_VolunteerEventMgmtApp.Models.AttendanceSheet

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Attendance Sheet</h4>
<hr />
<form asp-action="Create">
    <div class="row">
        <div class="col-md-4 mb-3">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="LocationId" class="control-label"></label>
                <select asp-for="LocationId" class="form-control" asp-items="ViewBag.LocationID" id="LocationId">
                    <option value="">Select Location</option>
                </select>
                <span asp-validation-for="LocationId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DirectorId" class="control-label"></label>
                <select asp-for="DirectorId" class="form-control" asp-items="ViewBag.DirectorId">
                    <option value="">Select Director</option>
                </select>
                <span asp-validation-for="DirectorId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartTime" class="control-label"></label>
                <input asp-for="StartTime" class="form-control" />
                <span asp-validation-for="StartTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndTime" class="control-label"></label>
                <input asp-for="EndTime" class="form-control" />
                <span asp-validation-for="EndTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <textarea asp-for="Notes" class="form-control"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
        </div>

        <div class="col-md-8">
            <div class="row">
                <div class="form-group col-md-6 mb-3">
                    <label class="control-label d-block">Present singers (<span id="count"></span>)</label>
                    @Html.ListBox("selectedOptions", (MultiSelectList)ViewBag.SelectedSingers,
                             new { @size = 12, @class = "form-control", id = "selectedOptions" })
                    <button id="btnRemove" class="btn btn-outline-danger py-0 px-2 my-2">
                        <strong>Remove singer/s</strong>
                    </button>
                </div>

                <div class="form-group col-md-6 mb-3">
                    <label class="control-label d-block">Add singers to the attendance sheet</label>
                    @Html.ListBox("availableOptions", (MultiSelectList)ViewBag.AvailableSingers, 
                        new { @size = 12, @class = "form-control", id = "availableOptions" })
                    <button id="btnAdd" class="btn btn-outline-success py-0 px-3 my-2">
                        <strong>Add singer/s</strong>
                    </button>
                </div>
            </div>
        </div>

        <div class="form-group mt-2">
            <input type="submit" id="btnSubmit" value="Create" class="btn btn-purple" />
        </div>
    </div>
</form>

<div>
    <a asp-action="Index" class="btn btn-outline-primary py-0">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script src="~/js/multiselect.js"></script>
    <script>
            document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('LocationId').addEventListener('change', function () {
                var locationId = this.value;
                fetch('@Url.Action("GetSingersByLocation")?locationId=' + locationId)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok ' + response.statusText);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log("Received Data: ", data); // Debugging line
                        var selectedOptions = document.getElementById('selectedOptions');
                        var availableOptions = document.getElementById('availableOptions');
                        selectedOptions.innerHTML = '';
                        availableOptions.innerHTML = '';
                        data.forEach(singer => {
                            var option = document.createElement('option');
                            option.value = singer.id;
                            option.text = singer.firstName + ' ' + singer.lastName;
                            availableOptions.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error("Fetch Error: ", error); // Debugging line
                    });
            });
        });
    </script>
}