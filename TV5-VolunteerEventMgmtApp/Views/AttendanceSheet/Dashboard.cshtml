@model TV5_VolunteerEventMgmtApp.ViewModels.DashboardVM;

@{
	ViewData["Title"] = "Dashboard";
}

<h1>@ViewData["Title"]</h1>

<hr />
<partial name="_addLocationModal" />
<partial name="_addSingerModal" />
<partial name="_addDirectorModal" />
<partial name="_addAttendanceSheetModal" />



<link href="~/css/dashboard.css" rel="stylesheet" />

<div class="dashboard-container">

	<!--Left-->
	<div class="left-panel">

		<div class="my-3 mx-0">

			<div class="action-buttons">

				@*<a asp-area="" asp-controller="AttendanceSheet" asp-action="Create" class="">
					<div class="big-link background-image-1">
						<div class="link-box">
							<span style="font-size: .6em;">Create</span>
							<span class="emp-text">Attendance Sheet</span>
						</div>
					</div>
				</a>
				<a asp-area="" asp-controller="CsvImport" asp-action="Index" class="">
					<div class="big-link background-image-2">
						<div class="link-box">
							<span style="font-size: .6em;">Upload</span>
							<span class="emp-text">Singer Data</span>
						</div>
					</div>
				</a>
				<a asp-area="" asp-controller="Director" asp-action="Create" class="">
					<div class="big-link background-image-3">
						<div class="link-box">
							<span style="font-size: .6em;">Create</span>
							<span class="emp-text">Director</span>
						</div>
					</div>
				</a>
				<a asp-area="" asp-controller="Location" asp-action="Create" class="">
					<div class="big-link background-image-4">
						<div class="link-box">
							<span style="font-size: .6em;">Create</span>
							<span class="emp-text">Location</span>
						</div>
					</div>
				</a>*@

				<!--Modal Test starts here-->

				<button class="btn btn-purple"
						data-bs-toggle="modal"
						data-bs-target="#addAttendanceSheetModal"
						type="button">
					Create Attendance Sheet
				</button>

				<button class="btn btn-purple"
						data-bs-toggle="modal"
						data-bs-target="#addSingerModal"
						type="button">
					Create Singer(s)
				</button>

				<button class="btn btn-purple"
						data-bs-toggle="modal"
						data-bs-target="#addDirectorModal"
						type="button">
					Create Director
				</button>

				<button class="btn btn-purple"
						data-bs-toggle="modal"
						data-bs-target="#addAttendanceSheetModal"
						type="button">
					Create Location
				</button>

				<!--Modal Test ends here-->

			</div>
		</div>

		<div class="dropdown my-4">
			<label for="locationDropdown">Select Location</label>
			<select id="locationDropdown" class="form-control">
				<option value="all" selected>All</option>
				@foreach (var location in Model.Locations)
				{
					<option value="@location.ID">@location.City</option>
				}
			</select>
		</div>
		<div class="counter-widget text-start">

			<div class="statistics my-3">
				<p>Total Singers: <span id="singerCount" class="text-purple fw-bold">0</span></p>

				<div id="specificLocationStats">
					<p>
						Average Attendance: <span id="mean" class="text-purple fw-bold">--</span>
						<span class="text-purple fw-bold">(<span id="percentageAttendance">--</span>%)</span>
					</p>
				</div>

				<div id="allLocationsStats" style="display: none;">
					<p>
						Highest Average Attendance: <span id="highestmean" class="text-purple fw-bold"></span>
						<span class="text-purple fw-bold">(<span id="highestPercentageAttendance"></span>%)</span> at <strong><span id="highestmeanLocation"></span></strong>
					</p>
					<p>
						Lowest Average Attendance: <span id="lowestmean" class="text-purple fw-bold"></span>
						<span class="text-purple fw-bold">(<span id="lowestPercentageAttendance"></span>%)</span> at <strong><span id="lowestmeanLocation"></span></strong>
					</p>
				</div>
			</div>
		</div>
		<div id="attendance-graph-container"></div>
	</div>

	<!--Right-->
	<div class="right-panel">
		<h2 class="fs-3 mb-4">Weekly Calendar</h2>

		<div class="calendar-container">
			<div id="calendar" class="fc-calendar"></div>
		</div>
	</div>

</div>

<!-- Event Details Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="eventModalLabel">Event Details</h5>
			</div>
			<div class="modal-body">
				<!-- Content will be injected by JavaScript -->
			</div>
			<div class="modal-footer">
				<a href="#" id="detailsLink" class="btn btn-purple">View Details</a>
				<button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	@* 	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> *@
	<script src="~/js/multiselect.js"></script>
	<script src="~/js/dashboard.js"></script>
	<script src="~/js/refreshDDL.js"></script>
	<script src="~/js/RefreshChecks.js"></script>

	<script>

		$('#submitLocationCreate').click(function (event) {
			event.preventDefault();
			ClearErrors();
			var form = $('#createLocationForm');
			if (form.valid()) {
				$.ajax({
					type: "POST",
					url: form.attr('action'),
					data: form.serialize(),
					success: function () {
						$('#addLocationModal').modal('hide');
					},
					error: function (xhr) {
						var errorMessages = [];
						switch (xhr.status) {
							case 401:
								errorMessages.push("You must be logged in first.");
								break;
							case 403:
								errorMessages.push("You are not authorized for this action.");
								break;
							default:
								// place model state errors here
								errorMessages = xhr.responseText.split("|").slice(0, -1);
						}

						if (!errorMessages.some((str) => str !== "")) {
							errorMessages.push("Error: unable to complete operation");
						}

						var ul = document.getElementById("ErrorList");
						for (var i = 0; i < errorMessages.length; i++) {
							var errorMessage = errorMessages[i];
							var li = document.createElement("li");
							li.innerHTML = errorMessage;
							ul.appendChild(li);
						}
					}
				});
			}
			return false;

		})


		// $('#single-location-tab').click(function (event) {
		// 	event.preventDefault();
		// 	ClearErrors();
		// 	setSingerTab("single");
		// })

		// $('#bulk-location-tab').click(function (event) {
		// 	event.preventDefault();
		// 	ClearErrors();
		// 	setSingerTab("bulk")
		// })

		// 	$('#single-location-tab').click(function (event) {
		// 	event.preventDefault();
		// 	ClearErrors();
		// 	setSingerTab("single");
		// })

		// $('#bulk-location-tab').click(function (event) {
		// 	event.preventDefault();
		// 	ClearErrors();
		// 	setSingerTab("bulk")
		// })

		// $('#single-location-tab').click(function (event) {
		// 	event.preventDefault();
		// 	ClearErrors();
		// 	setSingerTab("single");
		// })

		// $('#bulk-location-tab').click(function (event) {
		// 	event.preventDefault();
		// 	ClearErrors();
		// 	setSingerTab("bulk")
		// })

		$('#LocationId').change(function (event) {
			console.log("drop down change has happened");
			event.preventDefault();
			let locationId = event.target.value;
			fetch('@Url.Action("GetSingersByLocation")?locationId=' + locationId)
				.then(response => {
					if(!response.ok){
						throw new Error('Network response was not ok ' + response.statusText);
					}
					return response.json();
				})
			.then(data => {
							let selectedOptions = document.getElementById('selectedOptions');
								let availableOptions = document.getElementById('availableOptions');
								if (locationId === "") {
									selectedOptions.disabled = true;
									availableOptions.disabled = true;
								}
								else {
									selectedOptions.disabled = false;
									availableOptions.disabled = false;
								}
								selectedOptions.innerHTML = '';
								availableOptions.innerHTML = '';
								data.forEach(singer => {
									let option = document.createElement('option');
									option.value = singer.id;
									option.text = singer.firstName + ' ' + singer.lastName;
									availableOptions.appendChild(option);
																	});
							})
							.catch(error => {
								console.error("Fetch Error: ", error); // Debugging line
							});
						// Get directors from seleted location
						fetch('@Url.Action("GetDirectorsByLocation")?locationId=' + locationId)
							.then(response => {
								if (!response.ok) {
									throw new Error('Network response was not ok ' + response.statusText);
								}
								return response.json();
							})
							.then(data => {
								let selectDirector = document.getElementById('directors');
								if (locationId === "") {
									selectDirector.disabled = true;
								}
								else selectDirector.disabled = false;
								selectDirector.innerHTML = '';
								let label = document.createElement('option');
								label.value = '';
								label.text = 'Select Director';
								selectDirector.appendChild(label);
								data.forEach(dir => {
									let option = document.createElement('option');
									option.value = dir.id;
									option.text = dir.firstName + ' ' + dir.lastName;
									selectDirector.appendChild(option);
								});
							})
							.catch(error => {
								console.error("Fetch Error: ", error); // Debugging line
							});
					});



		function setSingerTab(tabName) {
			ClearErrors();
			$('#singerCreateTabs .nav-link').removeClass('active');
			$('#singersCreateTabsContent .tab-pane').removeClass('show active');

			if (tabName === 'single') {
				$('#single-tab').addClass('active');
				$('#single').addClass('show active');
			} else if (tabName === 'bulk') {
				$('#bulk-tab').addClass('active');
				$('#bulk').addClass('show active');
			}
		}

		function setLocationTab(tabName) {
			ClearErrors();
			$('#locationCreateTabs .nav-link').removeClass('active');
			$('#locationsCreateTabsContent .tab-pane').removeClass('show active');

			if (tabName === 'single') {
				$('#single-location-tab').addClass('active');
				$('#single-location').addClass('show active');
			} else if (tabName === 'bulk') {
				$('#bulk-location-tab').addClass('active');
				$('#bulk-location').addClass('show active');
			}
		}

		function setDirectorTab(tabName) {
			ClearErrors();
			$('#directorCreateTabs .nav-link').removeClass('active');
			$('#directorsCreateTabsContent .tab-pane').removeClass('show active');

			if (tabName === 'single') {
				$('#single-director-tab').addClass('active');
				$('#single-director').addClass('show active');
			} else if (tabName === 'bulk') {
				$('#bulk-director-tab').addClass('active');
				$('#bulk-director').addClass('show active');
			}
		}

		$('#addSingerModal').on('show.bs.modal', function () {
			var selectedOption = $('#SingerLocations').val();//Return to the current selected value
			RefreshChecks('SingerLocations', '/Singer/GetLocations', false, null, true);
		})

		$('#addLocationModal').on('show.bs.modal', function () {
			var selectedOption = $('#DirectorLocations').val();//Return to the current selected value
			refreshDDL('DirectorLocations', '/Location/GetDirectors/' + selectedOption, false, null, true, 'None', true);
		})

		

		function ClearErrors() {
			//Empty out the list of validation errors if there are any
			var ul = document.getElementById("ErrorList");
			while (ul.firstChild) {
				ul.removeChild(ul.firstChild);
			}
		}
	</script>


}